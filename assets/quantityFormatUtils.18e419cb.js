import{k5 as V,ga as X,k6 as Y,k7 as Z,R as S,j$ as tt,k8 as g,bK as et,aR as at,aT as nt,aU as st,k9 as it,ka as rt,kb as G,c3 as x,kc as ot,kd as ct,ke as ut,kf as ht,kg as lt}from"./vendor.e1f4f720.js";import{b as ft}from"./Segment.acc7f30e.js";const Rt={readOnly:!0,get(){return V(this.view)}};var F;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(F||(F={}));function T(t){if(!t)return null;if(X(t)&&t.wkid){const e=Y[t.wkid];if(e)return e}if(t.wkt){const e=Mt(t.wkt);if(e)return e}return null}function Mt(t){const e=Z.exec(t);if(!e||e.length!==2)return null;const a=e[1].split(",");if(!a||a.length<3)return null;const n=parseFloat(a[1]),s=parseFloat(a[2]);return isNaN(n)||isNaN(s)?null:{a:n,f:s===0?0:1/s}}function pt(t){const e=T(t||et.WGS84);if(dt(e))return e;const a=e.a*(1-e.f);return Object.assign(e,{b:a,eSq:1-(a/e.a)**2,radius:(2*e.a+a)/3,densificationRatio:1e4/((2*e.a+a)/3)})}function dt(t){return"b"in t&&"eSq"in t&&"radius"in t}function mt(t){return T(t)!==null}function _t(t,e="meters"){if(!t)throw new S("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(n=>!mt(n.spatialReference)))throw new S("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const a=[];for(let n=0;n<t.length;n++){const s=t[n],{spatialReference:m}=s,v=s.type==="polyline"?s.paths:s.rings;let r=0;for(let b=0;b<v.length;b++){const o=v[b];let f=0;for(let M=1;M<o.length;M++){const $=o[M-1][0],R=o[M][0],_=o[M-1][1],u=o[M][1];if(_!==u||$!==R){const c={distance:null};gt(c,[$,_],[R,u],m),f+=c.distance}}r+=f}r=tt(r,"meters",e),a.push(r)}return a}function gt(t,e,a,n){const s=e[0]*g,m=e[1]*g,v=a[0]*g,r=a[1]*g,{a:b,b:o,f,radius:M}=pt(n),$=v-s,R=Math.atan((1-f)*Math.tan(m)),_=Math.atan((1-f)*Math.tan(r)),u=Math.sin(R),c=Math.cos(R),k=Math.sin(_),h=Math.cos(_);let q,z,p,i,w,P,N,U,y,A,D=1e3,l=$;do{if(N=Math.sin(l),U=Math.cos(l),p=Math.sqrt(h*N*(h*N)+(c*k-u*h*U)*(c*k-u*h*U)),p===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;w=u*k+c*h*U,P=Math.atan2(p,w),y=c*h*N/p,z=1-y*y,i=w-2*u*k/z,isNaN(i)&&(i=0),A=f/16*z*(4+f*(4-3*z)),q=l,l=$+(1-A)*f*y*(P+A*p*(i+A*w*(2*i*i-1)))}while(Math.abs(l-q)>1e-12&&--D>0);if(D===0){const B=M,H=Math.acos(Math.sin(m)*Math.sin(r)+Math.cos(m)*Math.cos(r)*Math.cos(v-s))*B,E=v-s,J=Math.sin(E)*Math.cos(r),L=Math.cos(m)*Math.sin(r)-Math.sin(m)*Math.cos(r)*Math.cos(E),Q=Math.atan2(J,L);return t.azimuth=Q/g,t.distance=H,t.reverseAzimuth=void 0,t}const d=z*(b*b-o*o)/(o*o),j=d/1024*(256+d*(d*(74-47*d)-128)),I=o*(1+d/16384*(4096+d*(d*(320-175*d)-768)))*(P-j*p*(i+j/4*(w*(2*i*i-1)-j/6*i*(4*p*p-3)*(4*i*i-3)))),K=Math.atan2(h*Math.sin(l),c*k-u*h*Math.cos(l)),W=Math.atan2(c*Math.sin(l),c*k*Math.cos(l)-u*h);return t.azimuth=K/g,t.distance=I,t.reverseAzimuth=W/g,t}function zt(t,e){if(at(e,0,0,0),t.length>0){for(let a=0;a<t.length;++a)nt(e,e,t[a]);st(e,e,1/t.length)}}function wt(t,e,a,n){n.projectToRenderScreen(t,O),n.projectToRenderScreen(e,C),it(a,bt,vt),rt(a,a)}const O=G(),vt=O,C=G(),bt=C;class Nt{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=x(this._spatialReference,1),this._metersPerElevationUnit=x(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}function Ut(t,e,a,n=2,s="abbr"){return ot(t,ft(e,a).value,a,n,s)}function yt(t,e,a=2,n="abbr"){return ht(t,e.value,e.unit,a,n)}function At(t,e,a=2,n="abbr"){return lt(t,e.value,e.unit,a,n)}function Pt(t,e,a=2,n="abbr"){return ct(t,e.value,e.unit,a,n)}function jt(t,e,a=2,n="abbr"){return ut(t,e.value,e.unit,a,n)}export{mt as M,Pt as a,yt as b,zt as c,F as e,Ut as g,wt as i,jt as j,Rt as r,Nt as t,At as w,_t as y,gt as z};
