import{kd as Q,gf as V,ke as Y,kf as Z,aJ as S,k7 as tt,kg as g,bP as et,aU as at,aW as nt,aX as st,kh as it,ki as rt,kj as G,c8 as x,kk as ot,kl as ct,km as ut,kn as ht,ko as lt}from"./vendor.5530b0a9.js";import{b as ft}from"./Segment.585ecfe3.js";const _t={readOnly:!0,get(){return Q(this.view)}};var F;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(F||(F={}));function O(t){if(!t)return null;if(V(t)&&t.wkid){const e=Y[t.wkid];if(e)return e}if(t.wkt){const e=Mt(t.wkt);if(e)return e}return null}function Mt(t){const e=Z.exec(t);if(!e||e.length!==2)return null;const a=e[1].split(",");if(!a||a.length<3)return null;const n=parseFloat(a[1]),s=parseFloat(a[2]);return isNaN(n)||isNaN(s)?null:{a:n,f:s===0?0:1/s}}function pt(t){const e=O(t||et.WGS84);if(dt(e))return e;const a=e.a*(1-e.f);return Object.assign(e,{b:a,eSq:1-(a/e.a)**2,radius:(2*e.a+a)/3,densificationRatio:1e4/((2*e.a+a)/3)})}function dt(t){return"b"in t&&"eSq"in t&&"radius"in t}function mt(t){return O(t)!==null}function zt(t,e="meters"){if(!t)throw new S("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(n=>!mt(n.spatialReference)))throw new S("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const a=[];for(let n=0;n<t.length;n++){const s=t[n],{spatialReference:m}=s,v=s.type==="polyline"?s.paths:s.rings;let r=0;for(let k=0;k<v.length;k++){const o=v[k];let f=0;for(let M=1;M<o.length;M++){const $=o[M-1][0],_=o[M][0],z=o[M-1][1],u=o[M][1];if(z!==u||$!==_){const c={distance:null};gt(c,[$,z],[_,u],m),f+=c.distance}}r+=f}r=tt(r,"meters",e),a.push(r)}return a}function gt(t,e,a,n){const s=e[0]*g,m=e[1]*g,v=a[0]*g,r=a[1]*g,{a:k,b:o,f,radius:M}=pt(n),$=v-s,_=Math.atan((1-f)*Math.tan(m)),z=Math.atan((1-f)*Math.tan(r)),u=Math.sin(_),c=Math.cos(_),b=Math.sin(z),h=Math.cos(z);let q,R,p,i,w,A,N,P,U,y,D=1e3,l=$;do{if(N=Math.sin(l),P=Math.cos(l),p=Math.sqrt(h*N*(h*N)+(c*b-u*h*P)*(c*b-u*h*P)),p===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;w=u*b+c*h*P,A=Math.atan2(p,w),U=c*h*N/p,R=1-U*U,i=w-2*u*b/R,isNaN(i)&&(i=0),y=f/16*R*(4+f*(4-3*R)),q=l,l=$+(1-y)*f*U*(A+y*p*(i+y*w*(2*i*i-1)))}while(Math.abs(l-q)>1e-12&&--D>0);if(D===0){const X=M,B=Math.acos(Math.sin(m)*Math.sin(r)+Math.cos(m)*Math.cos(r)*Math.cos(v-s))*X,E=v-s,H=Math.sin(E)*Math.cos(r),K=Math.cos(m)*Math.sin(r)-Math.sin(m)*Math.cos(r)*Math.cos(E),L=Math.atan2(H,K);return t.azimuth=L/g,t.distance=B,t.reverseAzimuth=void 0,t}const d=R*(k*k-o*o)/(o*o),j=d/1024*(256+d*(d*(74-47*d)-128)),C=o*(1+d/16384*(4096+d*(d*(320-175*d)-768)))*(A-j*p*(i+j/4*(w*(2*i*i-1)-j/6*i*(4*p*p-3)*(4*i*i-3)))),I=Math.atan2(h*Math.sin(l),c*b-u*h*Math.cos(l)),J=Math.atan2(c*Math.sin(l),c*b*Math.cos(l)-u*h);return t.azimuth=I/g,t.distance=C,t.reverseAzimuth=J/g,t}function Rt(t,e){if(at(e,0,0,0),t.length>0){for(let a=0;a<t.length;++a)nt(e,e,t[a]);st(e,e,1/t.length)}}function wt(t,e,a,n){n.projectToRenderScreen(t,T),n.projectToRenderScreen(e,W),it(a,kt,vt),rt(a,a)}const T=G(),vt=T,W=G(),kt=W;class Nt{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=x(this._spatialReference,1),this._metersPerElevationUnit=x(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}function Pt(t,e,a,n=2,s="abbr"){return ot(t,ft(e,a).value,a,n,s)}function Ut(t,e,a=2,n="abbr"){return ht(t,e.value,e.unit,a,n)}function yt(t,e,a=2,n="abbr"){return lt(t,e.value,e.unit,a,n)}function At(t,e,a=2,n="abbr"){return ct(t,e.value,e.unit,a,n)}function jt(t,e,a=2,n="abbr"){return ut(t,e.value,e.unit,a,n)}export{mt as M,At as a,Ut as b,Rt as c,F as e,Pt as g,wt as i,jt as j,_t as r,Nt as t,yt as w,zt as y,gt as z};
