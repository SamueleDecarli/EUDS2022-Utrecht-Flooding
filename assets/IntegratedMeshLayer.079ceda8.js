var O=Object.defineProperty,$=Object.defineProperties;var x=Object.getOwnPropertyDescriptors;var u=Object.getOwnPropertySymbols;var L=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable;var f=(e,t,i)=>t in e?O(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,a=(e,t)=>{for(var i in t||(t={}))L.call(t,i)&&f(e,i,t[i]);if(u)for(var i of u(t))I.call(t,i)&&f(e,i,t[i]);return e},p=(e,t)=>$(e,x(t));import{ml as M,M as N,bN as A,bx as b,aP as g,g as s,i as r,n as S,mJ as j,mK as U,mL as J,re as K,mM as D,rh as P,I as V,d as E,aE as R,U as z,oN as k,mO as C,r as F,t as q,R as l,dj as B,rk as G}from"./vendor.e1f4f720.js";import{w as H}from"./persistable.f81b0a22.js";import{A as Q,K as v}from"./SceneService.ef59c111.js";import{s as W,l as X,u as Y,m as Z}from"./I3SLayerDefinitions.13a96953.js";import{f as c}from"./SceneModification.b8035b11.js";import"./I3SIndexInfo.f52f39eb.js";var n;let d=n=class extends M(N.ofType(c)){constructor(e){super(e),this.url=null}clone(){return new n({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const i=new n;for(const y of e)i.add(c.fromJSON(y,t));return i}static async fromUrl(e,t,i){const y={url:A(e),origin:"service"},T=await b(e,{responseType:"json",signal:g(i,"signal")}),_=t.toJSON(),h=[];for(const m of T.data)h.push(c.fromJSON(p(a({},m),{geometry:p(a({},m.geometry),{spatialReference:_})}),y));return new n({url:e,items:h})}};s([r({type:String})],d.prototype,"url",void 0),d=n=s([S("esri.layers.support.SceneModifications")],d);const w=d;let o=class extends Q(j(U(J(K(D(P(V))))))){constructor(...e){super(...e),this._handles=new E,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this._handles.destroy()}initialize(){this._handles.add(R(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,z))}normalizeCtorArgs(e,t){return typeof e=="string"?a({url:e},t):e}readModifications(e,t,i){this._modificationsSource={url:k(e,i),context:i}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=g(e,"signal");try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(i){C(i)}if(await this._fetchService(t),F(this._modificationsSource)){const i=await w.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",i,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(!q(this._modificationsSource))return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(v.SAVE_AS,p(a({},t),{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"}),e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(v.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new l("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new l("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};s([r({type:String,readOnly:!0})],o.prototype,"geometryType",void 0),s([r({type:["show","hide"]})],o.prototype,"listMode",void 0),s([r({type:["IntegratedMeshLayer"]})],o.prototype,"operationalLayerType",void 0),s([r({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),s([r({type:W,readOnly:!0})],o.prototype,"nodePages",void 0),s([r({type:[X],readOnly:!0})],o.prototype,"materialDefinitions",void 0),s([r({type:[Y],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),s([r({type:[Z],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),s([r({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),s([r({type:w}),H({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],o.prototype,"modifications",void 0),s([B(["web-scene","portal-item"],"modifications")],o.prototype,"readModifications",null),s([r(G)],o.prototype,"elevationInfo",void 0),s([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),o=s([S("esri.layers.IntegratedMeshLayer")],o);const ne=o;export{ne as default};
