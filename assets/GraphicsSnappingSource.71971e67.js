import{c1 as u,y as m,iB as y,r as a,t as h,hE as f,bL as g,v as _,b1 as S,bM as w,a8 as v,fM as k,hw as O,g as d,i as p,n as A,dG as b}from"./vendor.e1f4f720.js";import{f as R}from"./normalizeUtilsSync.4e5cb87c.js";import{u as M}from"./FeatureStore.f139ffd0.js";import{Y as C}from"./QueryEngine.00853929.js";import{a as $}from"./DimensioningAnalysisView3D.01365e44.js";import{o as F}from"./queryEngineUtils.f44bbf1c.js";import"./PooledRBush.bc06cb61.js";import"./quickselect.03306040.js";import"./optimizedFeatureQueryEngineAdapter.8623d62e.js";import"./centroid.2b09e2ae.js";import"./QueryEngineResult.e001e53c.js";import"./WhereClause.de5a3790.js";import"./utils.b67e6d51.js";import"./ClassBreaksDefinition.ee27788f.js";import"./json.d1a0fa35.js";import"./QueryEngineCapabilities.c2e9875c.js";import"./LineVisualElement.77cea539.js";import"./analysisViewUtils.65950ebe.js";import"./PointVisualElement.3123f97c.js";import"./RightAngleQuadVisualElement.c48c6392.js";import"./Segment.acc7f30e.js";import"./elevationInfoUtils.7190964b.js";import"./dragEventPipeline3D.53aa8ccb.js";import"./EditGeometryOperations.df4aed1b.js";let n=class extends u(m){constructor(e){super(e),this.availability=1,this.sources={multipoint:null,point:null,polygon:null,polyline:null},this.loadedWkids=new Set,this.loadedWkts=new Set,this.pendingAdds=[]}get updating(){return this.updatingHandles.updating}get layer(){return this.layerSource.layer}destroy(){const e=this.pendingAdds;this.pendingAdds.length=0;for(const t of e)t.task.abort();this._mapSources(t=>this._destroySource(t))}initialize(){this.handles.add([this.layer.on("graphic-update",e=>this._onGraphicUpdate(e)),this.updatingHandles.addOnCollectionChange(()=>this.layer.graphics,e=>this._onGraphicsChanged(e))]),this._addMany(this.layer.graphics.toArray())}async fetchCandidates(e,t){const r=await y(this._mapSources(s=>s.queryEngine.executeQueryForSnapping({point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),distance:e.distance,types:e.types,query:a(e.filter)?e.filter.createQuery().toJSON():{where:"1=1"}},t).then(({candidates:o})=>o))),i=r.flat().map(s=>F(s,e.coordinateHelper,e.elevationInfo));return $(e.point,i),i}refresh(){}_onGraphicUpdate(e){switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],r=new Map;for(const i of e)h(i.geometry)||(this._needsInitializeProjection(i.geometry.spatialReference)?(t.push(i.geometry.spatialReference),r.set(i.uid,i)):this._add(i));this._createPendingAdd(t,r)}_createPendingAdd(e,t){if(!e.length)return;const r=f(async o=>{await g(e.map(l=>({source:l,dest:this.spatialReference})),{signal:o}),this._markLoadedSpatialReferences(e);for(const[,l]of t)this._add(l)});this.updatingHandles.addPromise(r.promise);const i={task:r,graphics:t},s=()=>b(this.pendingAdds,i);r.promise.then(s,s),this.pendingAdds.push(i)}_markLoadedSpatialReferences(e){for(const t of e)t.wkid!=null&&this.loadedWkids.add(t.wkid),t.wkt!=null&&this.loadedWkts.add(t.wkt)}_add(e){if(h(e.geometry)||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=_.fromExtent(t));const r=this._ensureSource(t.type);if(h(r))return;const i=this._createOptimizedFeature(e.uid,t);a(i)&&r.featureStore.add(i)}_needsInitializeProjection(e){return(e.wkid==null||!this.loadedWkids.has(e.wkid))&&(e.wkt==null||!this.loadedWkts.has(e.wkt))&&!S(e,this.spatialReference)}_createOptimizedFeature(e,t){const r=w(R(t),this.spatialReference);return r?new v(k(r,!1,!1),{[c]:e},null,e):null}_ensureSource(e){const t=this.sources[e];if(a(t))return t;const r=this._createSource(e);return this.sources[e]=r,r}_createSource(e){const t=O.toJSON(e),r=new M({geometryType:t,hasZ:!1,hasM:!1});return{featureStore:r,queryEngine:new C({featureStore:r,fields:[{name:c,type:"esriFieldTypeOID",alias:c}],geometryType:t,hasM:!1,hasZ:!1,objectIdField:c,spatialReference:this.spatialReference,scheduler:a(this.view)&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources(t=>this._removeFromSource(t,e));for(const t of this.pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const r=t.uid;e.featureStore.has(r)&&e.featureStore.removeById(t.uid)}_destroySource(e){e.queryEngine.destroy(),this.sources[e.type]=null}_mapSources(e){const{point:t,polygon:r,polyline:i,multipoint:s}=this.sources,o=[];return a(t)&&o.push(e(t)),a(r)&&o.push(e(r)),a(i)&&o.push(e(i)),a(s)&&o.push(e(s)),o}};d([p({constructOnly:!0})],n.prototype,"spatialReference",void 0),d([p({constructOnly:!0})],n.prototype,"layerSource",void 0),d([p({constructOnly:!0})],n.prototype,"view",void 0),d([p({readOnly:!0})],n.prototype,"updating",null),d([p({readOnly:!0})],n.prototype,"availability",void 0),n=d([A("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const c="OBJECTID";export{n as GraphicsSnappingSource};
